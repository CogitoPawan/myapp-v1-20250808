To meet these extensive requirements, we'll begin by focusing on building a single, coherent microservice based on the mentioned architecture and details. Our example will revolve around a "Notification Service," built using FastAPI in Python. I'll include the project structure, configuration files, dependencies, and some unit tests.

### Project Structure

### `requirements.txt`

pip install -r requirements.txt

This is a basic example for a scalable, maintainable notification service following the recommended architecture. You can extend this structure to other services according to your application's requirements. Happy coding!